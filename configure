#!/usr/bin/env bash

set -euo pipefail
IFS=$'\n\t'

case $(uname) in
Darwin) ;;
*)
  echo "Unsupported OS. Exiting..."
  return 1
  ;;
esac

DOTFILES_REPO="git@git.sr.ht:~hwrd/dotfiles"
export HOMEBREW_BUNDLE_FILE="$HOME/.dotfiles/bootstrap/Brewfile"

function ensure_homebrew {
  if ! (hash brew) 2>/dev/null; then
    echo "brew not installed. Installng brew..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  fi
}

function install_dotfiles {
  if [ -d "$HOME/.dotfiles" ]; then
    echo "$HOME/.dotfiles already exists. Skipping installation."
  else
    git clone "$DOTFILES_REPO" "$HOME/.dotfiles" &&
      pushd "$HOME/.dotfiles" &&
      git submodule init &&
      git submodule update &&
      ./install.sh
    popd
  fi
}

function sync {
  sudo --validate
  ensure_homebrew
  brew bundle check || brew bundle install && brew bundle cleanup --force && brew bundle dump --force
}

function bootstrap {
  sync
  install_dotfiles
}

if [ "$0" = "$BASH_SOURCE" ]; then # Script being run by calling it
  bootstrap
fi # If not called explicitly then script is being sourced, nothing to do
